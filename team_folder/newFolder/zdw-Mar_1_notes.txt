Notes:
==============
measure ticks of encoder a inputs - when they go high - count ticks

Encoder input B not needed:
but direction can be determined by phase shift of encoder input A with respect encoder input B (ie. +/- 90degree phase shift)

Use rising edge syncronizer and counter for encoder input A and count number of ticks between two pulses. This tick count is the representation
of encoder rotation speed. 
take ticks and multiply by clk speed (100MHz), gear ratio (87:1) and wheel diameter

- in "setup" push values for the multiply factors to memory - parameterization 

functional tests for each hardware component to test subsystems
IMU does not measure rotation it measures rotation velocity (need integation)


PDR contains:
======================
team introduction
highlevel blockdiagram (label parts - m1, m2) - nomenclature
hw/sw - terms/architecture - register map and how they communicate
subsystem slides
 - eg. encoder processor subsystem - function call - register
Cost and scheduling
CDR estimates
Our advantage - "why pick us?" - sompetitive advantage - eg. optimization

Camera:
=================
OV5462 camera 640 resolution


HC-SR04 Info:
=================
Max range = 4 meters
Max time = 23.5294118 milliseconds (using formula below solving for width)
*** suggested to use over 60ms measurement cycle

speed of sound = 340 meters/second
divide by 2 because signal goes and comes back - need half

Formula:
Using the speed of sound ~340 meters/second
(distance in meters) = (width of pulse in seconds) * (speed of sound) / 2
or simply:
170 * (time in seconds) = (distance in meters)

(distance in cm) = (width of pulse in MICROseconds) / 58
(distance in inches) = (width of pulse in MICROseconds) / 148


Sensor Process:
1. set trigger pin high for 10 microseconds (sleep) and then set low
2. wait to receive echo pulse on echo pin
3. start counter to count until pulse on echo pin goes low
4. get counter and convert into usable measurement